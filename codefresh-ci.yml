version: "1.0"
# Stages can help you organize your steps in stages
stages:
  - "clone"
  - "build"
  - "test"
steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    # CF_BRANCH value is auto set when pipeline is triggered
    # Learn more at codefresh.io/docs/docs/codefresh-yaml/variables/
    revision: "${{CF_BRANCH}}"
    # git: "github"
    stage: "clone"

  build:
    title: "Building Docker image"
    type: "build"
    image_name: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    working_directory: "${{clone}}"
    tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    dockerfile: "build-deploy/Dockerfile.ci"
    stage: "build"

  parallel_testing_steps:
    type: parallel
    stage: "test"
    steps:
      linting:
        title: "Running the Linter"
        type: "freestyle"
        image: ${{build}}
        commands:
          - cd /var/www/applications/activematch/
          - set +e
          - /bin/sh -c "find . -type f -name '*.ph*' ! -path './vendor/*' -exec php -l {} 2>&1 \; | grep 'Errors.parsing'" ; export FIND_STATUS=$?
          - echo EXIT STATUS is $FIND_STATUS
          - if [[ "$FIND_STATUS" -eq "1" ]]; then echo Linting SUCCESS && exit 0; else echo Linting FAILED && exit 1; fi

      codeSniffer:
        title: "Running the CodeSniffer"
        type: "freestyle"
        image: ${{build}}
        commands: 
          - cd /var/www/applications/activematch/ && ./gradlew clean init phpCodesnifferCompat

      phploc:
        title: "Running the PhpLoc"
        type: "freestyle"
        image: ${{build}}
        commands: 
          - cd /var/www/applications/activematch/ && ./gradlew clean init phplocAll



